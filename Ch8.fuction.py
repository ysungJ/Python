# 8장 함수 
"""
<개념>
def 함수명 (매개변수):
    실행1
    실행2
    return 반환하는 값 

1. def : 함수를 만들 때 이것이 함수라는 걸 알려줌
2. 함수명 : 변수 이름처럼 이름이 있어야 함
3. 매개변수 : 함수에서 변수처럼 사용하는 값 
없을 수도 있고, 1개 이상일 수도 있음
4. return : 아웃풋으로 반환할 값을 적어줌 
없으면 생략 가능

반복되는 코드나 특정 기능을 수행하는 것들을 보통 함수로 만듬

함수를 만드면 함수명을 호출되어야 실행됨

함수명(전달인자)
함수명 : 함수를 만들 때 선언한 함수 이름
전달인자: 인풋에 넣어줄 값, 함수 정의할 때, 사용한 매개변수의 개수와 전달인자의 갯수는
같아야한다.
매개변수 x -> 전달 값 x

함수는 정의한 후에 호출 해야함

함수에서 반환 값이 있는 경우, 호출하고나서 그 결과값을 변수에 저장하여 사용해야함

변수 = 함수명(전달인자)
"""

#예시1
def printHello():
    print("hello Pyhton")

printHello()
printHello()

#매개변수가있는 함수
def printSUM(a,b):
    print(a+b)
    print(a*b)

printSUM(2,5)
printSUM(4,2)

#매개변수에 맞게 전달인자를 넣어야한다.
x =int(input("숫자 입력 : "))
y = int(input("숫자 입력2 : "))
printSUM(x,y)

#문자
def say(w):
    print(w, "하이")
say("Say word~")

#반환값이 있는 함수
def getSum(a,b):
    sum = a+b
    return sum

result = getSum(6,3)
print(result)

#리턴을 사용하여 원하는 값을 반환할 수 있다. 
#반환 값을 받아 변수에 저장하거나 출력등 다양한 형태로 사용가능
#지역변수는 해당 지역에서만 사용되고, 전역변수는 코드 전체에서 사용 가능

#내장함수
"""
<특징>
1. 함수를 정의하지 않고 호출 가능 
-> 미리 파이썬에서 구현 했기 때문
2. 내장 함수 이름을 변수 이름을 짓지 않는 것이 좋음
-> 오류는 발생하지 않지만, 값을 저장하면 내장 함수의 실행문이 덮어 씌워진다. 
그럼 기능 사용 불가 
ex) abs = -10
print(abs)

abs_num = abs(abs)
print(abs_num) -> 오류발생
"""

#8-5 문제
def isEVen(x):
    return x % 2 == 0
n = int (input("숫자 입력3 : "))

print("짝수?")
print(isEVen(n))

